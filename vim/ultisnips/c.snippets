snippet #i<
#include <$0.h>
endsnippet

snippet #i
#include "$0.h"
endsnippet

snippet #d
#define $0
endsnippet

snippet func
/*
 * @brief 
 * ${3/([^,]+,)*/$0/g}
 */
void foo($3){
$4
}
endsnippet

snippet if
if($1){
	$2
}
endsnippet

snippet while
while($1){
	$2
}
endsnippet

snippet for "" b
for(int ${1:ind} = 0; $1 < $2; $1++){
	$3
}
endsnippet

snippet main "" b
int main(){
	$0
	return EXIT_SUCCESS;
}
endsnippet

snippet typstr
typedef struct {
	$2;
} $1_t;
endsnippet

snippet str
struct $1 {
	$2;
};
endsnippet

snippet malloc
malloc($1${2: * sizeof($3)});
endsnippet

snippet @pa
@param 
endsnippet

snippet @b
@brief 
endsnippet

snippet @r
@return 
endsnippet

snippet @de
@deprecated 
endsnippet

snippet "if[n]?def" "" r
`!p snip.rv = match.group(0)` $1
$2
#endif
endsnippet

snippet do
do {
	$1
} while(0);
endsnippet

snippet switch
switch($1){
	case $3:
		$4
		break;
}
endsnippet

snippet case
case $1:
	$2
	break;
endsnippet

snippet default
default:
	$1
endsnippet
