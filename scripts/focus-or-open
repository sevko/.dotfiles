#! /usr/bin/env python3

import os
import sys
import pickle
import subprocess
import collections

def shell(cmd):
	return subprocess.Popen(cmd, shell=True, stdout=subprocess.PIPE).stdout.read().decode("utf-8")

PICKLE_DB_PATH = os.path.expanduser("~/.focus-or-open.pickle.db")
def get_db():
	try:
		with open(PICKLE_DB_PATH, "rb") as inf:
			return pickle.load(inf)

	except (OSError, IOError):
		return collections.defaultdict(int)

def save_db(db):
	with open(PICKLE_DB_PATH, "wb") as outf:
		pickle.dump(db, outf)

if __name__ == "__main__":
	command = sys.argv[1]
	window_name = sys.argv[2] if len(sys.argv) > 2 else command

	db = get_db()
	windows = shell("wmctrl -lxp")
	win_ids = []
	for win in windows.strip().split("\n"):
		win_id, _, pid, x_class, win_title = win.split(maxsplit=4)
		if window_name.lower() in x_class.lower():
			win_ids.append(win_id)

	if win_ids:
		next_win_ind = (db[window_name] + 1) % len(win_ids)
		next_win_id = win_ids[next_win_ind]

		shell(f"wmctrl -i -R {next_win_id}")
	else:
		next_win_ind = 0
		os.system(command)

	db[window_name] = next_win_ind
	save_db(db)
