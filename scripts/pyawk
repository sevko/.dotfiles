#! /usr/bin/env python3

import sys
from functools import reduce

from collections import Counter
import numpy as np

if len(sys.argv) not in [2, 3]:
	print(
		"Invalid. Usage: pyawk MAP-EXPR [REDUCE-EXPR]",
		file=sys.stderr)
	sys.exit(1)

map_expr, reduce_expr = \
	(sys.argv[1], "") if len(sys.argv) == 2 else sys.argv[1:]

if map_expr.isidentifier():
	map_func_template = "map_func = {}"
else:
	map_func_template = (
		"def map_func(x):"
		"	{}")
exec(map_func_template.format(map_expr))

if reduce_expr:
	reduce_vec_func_template = "reduce_func_vec = lambda xs: {}"
	reduce_func_template = (
		"def reduce_func(x, y):"
		"	return {}")

	mapped = [map_func(ln[:-1]) for ln in sys.stdin]
	try:
		exec(reduce_vec_func_template.format(reduce_expr))
		print(reduce_func_vec(mapped))

	except:
		exec(reduce_func_template.format(reduce_expr))
		print(reduce(reduce_func, mapped))

else:
	for ln in sys.stdin:
		print(map_func(ln[:-1]))
